apiVersion: v1
kind: Namespace
metadata:
  name: code
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: code
  namespace: code
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/auth-signin: https://$host/oauth2/start?rd=$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-url: https://$host/oauth2/auth    
spec:
  tls:
  - hosts:
    - code.msazure.club
    secretName: code-tls
  rules:
  - host: code.msazure.club
    http:
      paths:
      - backend:
          serviceName: code
          servicePort: 80
        path: /
---
apiVersion: v1
kind: Service
metadata:
 name: code
 namespace: code
spec:
 ports:
 - port: 80
   targetPort: 8080
 selector:
   app: code
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: code-pv-claim
  namespace: code
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 32Gi          
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: code
  name: code
  namespace: code
spec:
  selector:
    matchLabels:
      app: code
  replicas: 1
  template:
    metadata:
      labels:
        app: code
    spec:
      securityContext:
        fsGroup: 1000    
      containers:
      - image: huangyingting/code:latest
        imagePullPolicy: Always
        name: code
        args: ["--auth=none", "--disable-telemetry"]
        ports:
        - containerPort: 8080
        env:
        volumeMounts:
        - mountPath: /home/coder
          name: code-vol        
      volumes:
      - name: code-vol
        persistentVolumeClaim:
          claimName: code-pv-claim
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth2-code
  namespace: code
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oauth2-code
  template:
    metadata:
      labels:
        app: oauth2-code
    spec:
      containers:
      - env:
        - name: OAUTH2_PROXY_PROVIDER
          value: azure
        - name: OAUTH2_PROXY_AZURE_TENANT
          value: <REMOVED>
        - name: OAUTH2_PROXY_CLIENT_ID
          value: <REMOVED>
        - name: OAUTH2_PROXY_CLIENT_SECRET
          value: <REMOVED>
        - name: OAUTH2_PROXY_COOKIE_SECRET
          value: <REMOVED>
        - name: OAUTH2_PROXY_HTTP_ADDRESS
          value: 0.0.0.0:4180
        - name: OAUTH2_PROXY_UPSTREAM
          value: http://code.code
        image: machinedata/oauth2_proxy:latest
        imagePullPolicy: IfNotPresent
        name: oauth2-code
        ports:
        - containerPort: 4180
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: oauth2-code
  name: oauth2-code
  namespace: code
spec:
  ports:
  - name: http
    port: 4180
    protocol: TCP
    targetPort: 4180
  selector:
    app: oauth2-code  
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  name: oauth2-code
  namespace: code
spec:
  rules:
  - host: code.msazure.club
    http:
      paths:
      - backend:
          serviceName: oauth2-code
          servicePort: 4180
        path: /oauth2
  tls:
  - hosts:
    - code.msazure.club
    secretName: code-tls